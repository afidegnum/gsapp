#HaxRooms - room browser for flash based game haxball
#Copyright (C) 2016  Oskari PÃ¶ntinen <mail.morko@gmail.com>
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.

#:import Window kivy.core.window.Window

#:set rl_header_height 40
#:set rl_row_height 24
#:set rl_players_width 60
#:set rl_password_width 60
#:set rl_country_width 120
#:set rl_copy_width 40
#:set rl_join_width 40

#:set green_hax 0.576, 0.62, 0.498
#:set darkgreen_hax 0.446, 0.49, 0.368


<TabButton@Button>:
    size_hint_y: None
    height: dp(32)

<RoomListRow>:
    id: roomlistrow
    orientation: 'horizontal'
    size_hint_y: None
    height: dp(rl_row_height)
            
    ActButton:
        size_hint_x: None
        width: dp(rl_copy_width)
        source: 'images/copy.png'
        on_press: app.root.copy_room_pressed(self.parent.url)

    ActButton:
        size_hint_x: None
        width: dp(rl_join_width)
        source: 'images/join.png'
        on_press: app.root.join_room_pressed(self.parent.url)

    Label:
        text: self.parent.name
        text_size: (self.width - 20, self.height)
        halign: 'left'
        valign: 'middle'
        shorten: True
        font_name: 'NotoSerif'

    Label:
        size_hint_x: None
        width: dp(rl_players_width)
        text: roomlistrow.players_string

    Image:
        size_hint_x: None
        width: dp(rl_password_width)
        source: 'images/'+('lock-closed' if roomlistrow.password else 'lock-open')+'.png'

    CountryButton:
        text: roomlistrow.country
        country_code: roomlistrow.country_code
        select_on_press: False
        width: dp(rl_country_width)
        on_press: app.root.roomlist_country_button_pressed(self.country_code)

<ActButton>:
    color: 1,1,1,.7
    on_leave: self.color = [1,1,1,.7]
    on_enter: self.color = [1,1,1,1]

<CountryButton>:
    id: countrybtn
    orientation: 'horizontal'
    size_hint_x: None
    width: dp(rl_country_width)
    padding_x: 10, 10

    Image:
        size_hint_x: None
        width: 22
        source: 'images/flags/' + countrybtn.country_code + '.gif'
        color: 1,1,1,.7

    Label:
        text: countrybtn.text
        text_size: self.parent.width - 22, None
        line_height: .8
        font_size: '12sp'
        halign: 'left'
        valign: 'middle'
        color: 1,1,1,.7

<SortButton>:
    color: .7,.7,.7,1
    on_leave: self.color = [.7,.7,.7,1]
    on_enter: self.color = [1,1,1,1]

    canvas.before:
        Color:
            rgb: .03, .03, .4
        Rectangle:
            pos: self.x + 5, self.y + self.height/8
            size: self.width - 10, self.height/8

<RoomListRecycleView>:
    scroll_type: ['bars', 'content']
    scroll_wheel_distance: dp(114)
    bar_width: dp(15)

    RecycleBoxLayout:
        orientation: 'vertical'
        padding: 0, 0, dp(30), dp(0)
        height: self.minimum_height
        size_hint: 1, None
        default_size: None, dp(rl_row_height)
        default_size_hint: 1, None

<RoomList>:
    orientation: 'vertical'

    BoxLayout:
        size_hint_y: None
        orientation: 'horizontal'
        height: dp(rl_header_height)
        padding: 0, 0, dp(30), dp(0)

        SortButton:
            size_hint_x: None
            width: dp(rl_copy_width)
            text: 'Copy'

        SortButton:
            size_hint_x: None
            width: dp(rl_join_width)
            text: 'Join'

        SortButton:
            text: 'Name'
            on_press: app.root.sort_roomlist_pressed('name')

        SortButton:
            size_hint_x: None
            width: dp(rl_players_width)
            text: 'Players'
            on_press: app.root.sort_roomlist_pressed('players')

        SortButton:
            size_hint_x: None
            width: dp(rl_password_width)
            text: 'Pass'
            on_press: app.root.sort_roomlist_pressed('password')

        SortButton:
            size_hint_x: None
            width: dp(rl_country_width)
            text: 'Country'
            on_press: app.root.sort_roomlist_pressed('country')

    RoomListRecycleView:
        data: root.rooms
        viewclass: 'RoomListRow'

<PasswordToggleSelector>:
    orientation: 'horizontal'
    password: 'both'
    yes_btn: yes_btn
    no_btn: no_btn

    ToggleButton:
        id: yes_btn
        group: 'pass'
        text: 'Yes'
        on_state: root.toggle_password()

    ToggleButton:
        id: no_btn
        group: 'pass'
        text: 'No'
        on_state: root.toggle_password()

<SettingsButton>:
    id: settingsbtn
    color: 1, 1, 1, .7
    on_leave: self.color = [1,1,1,.7]
    on_enter: self.color = [1,1,1,1]

<RoomFilterPanel>:
    id: filters
    orientation: 'vertical'
    size_hint_x: None
    width: dp(200)
    field_height: dp(32)
    padding: 20, 0, 20, 0
    name_input: name_input
    password_selection: password_selection
    blocked_countries: blocked_countries

    Label:
        text: 'Filters'
        size_hint_y: None
        height: dp(rl_header_height)
        text_size: self.width, None
        halign: 'center'
        valign: 'middle'
        canvas.before:
            Color:
                rgb: .4, .03, .03
            Rectangle:
                pos: self.x + 5, self.y + self.height/8
                size: self.width - 10, self.height/8

    Label:
        size_hint_y: None
        height: root.field_height
        text: 'Name'
        text_size: self.width, None
        font_size: '16sp'
        halign: 'left'
        valign: 'middle'

    TextInput:
        id: name_input
        size_hint_y: None
        height: root.field_height
        multiline: False

    Label:
        size_hint_y: None
        height: root.field_height
        text: 'Password'
        text_size: self.width, None
        font_size: '16sp'
        halign: 'left'
        valign: 'middle'

    PasswordToggleSelector:
        id: password_selection
        orientation: 'horizontal'
        size_hint_y: None
        height: root.field_height
        password: 'both'

    Label:
        size_hint_y: None
        height: root.field_height
        text: 'Countries'
        text_size: self.width, None
        font_size: '16sp'
        halign: 'left'
        valign: 'middle'

    Button:
        size_hint_y: None
        height: root.field_height
        text: 'Select'
        on_press: filters.country_selection_popup.open()

    Label:
        text: 'Blocked countries:'
        size_hint_y: None
        height: root.field_height
        text_size: self.width, None
        font_size: '14sp'
        halign: 'left'
        valign: 'middle'

    BoxLayout:
        id: blocked_countries_layout

        ScrollView:
            id: scrollview
            size_hint: 1, None
            height: blocked_countries_layout.height
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(15)

            BoxLayout:
                id: blocked_countries
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height

<CountrySelectionButton>:
    id: countryselectbtn
    size_hint: None, None
    size: dp(280), dp(32)
    switch: switch
    on_press: self.selected = not self.selected

    Image:
        size_hint_x: None
        width: 22
        source: 'images/flags/' + countryselectbtn.country_code + '.gif'

    Label:
        text: countryselectbtn.text
        text_size: self.parent.width - 62, None
        font_size: '14sp'
        line_height: .8
        halign: 'left'
        valign: 'middle'

    Switch:
        id: switch
        size_hint_x: None
        width: 40
        active: countryselectbtn.selected
        on_active: countryselectbtn.selected = self.active

<SelectedCountryLabel>:
    size_hint_y: None
    height: dp(32)

<CountrySelectionPopup>:
    layout: layout
    size_hint: None, .85
    width: dp(350)
    title: 'Select/block countries.'
    
    BoxLayout:
        orientation: 'vertical'
        
        ScrollView:
            id: scrollview
            size_hint: 1, None
            height: root.height - 100
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(15)

            BoxLayout:
                orientation: 'vertical'
                id: layout
                size_hint_y: None
                height: self.minimum_height
                

        BoxLayout:
            orientation: 'horizontal'

            Button:
                text: 'Apply'
                on_press: root.dismiss()

            Button:
                text: 'Select All'
                on_press: root.select_all()

            Button:
                text: 'Block All'
                on_press: root.deselect_all()


<HaxRoomsRoot>:
    cols: 2
    rows: 2
    roomlist: roomlist
    filter_panel: filter_panel

    BoxLayout:
        id: header
        size_hint_y: None
        size_hint_x: None
        width: dp(200)
        height: dp(95)
        orientation: 'vertical'
        spacing: 0

        canvas.before:
            Color:
                rgb: green_hax
            Rectangle:
                pos: self.x, self.y
                size: self.width, self.height

        Image:
            size_hint: None, None
            pos_hint: {'center_y': .5, 'center_x': .5}
            size: 137, 90
            source: 'images/logo.png'

    FloatLayout:
        size_hint_y: None
        height: dp(95)

        canvas.before:
            Color:
                rgb: green_hax
            Rectangle:
                pos: self.x, self.y
                size: self.width, self.height
        Label:
            pos_hint: {'center_y': .5, 'center_x': .4}
            color: 1, 1, 1, .7
            text: 'Refresh'

        RefreshButton:
            id: refbtn
            size_hint: None, None
            size: 40, 39
            pos_hint: {'center_y': .5, 'center_x': .5}
            source: 'images/refresh.png'
            on_state: root.refresh_roomlist_pressed(self, self.state)
            color: 1, 1, 1, .7
            on_leave: self.color = [1,1,1,.7]
            on_enter: self.color = [1,1,1,1]
            canvas.before:
                PushMatrix
                Rotate:
                    angle: refbtn.angle
                    axis: 0, 0, 1
                    origin: refbtn.center
            canvas.after:
                PopMatrix

        SettingsButton:
            size_hint: None, None
            size: 72, 16
            source: 'images/settings.png'
            pos_hint: {'right': .9, 'top': .9}
            on_press: app.root.settings_button_pressed()

    RoomFilterPanel:
        id: filter_panel
        size_hint_x: None
        width: dp(200)
        field_height: dp(32)

        canvas.before:
            Color:
                rgb: green_hax
            Rectangle:
                pos: self.x, self.y
                size: self.width, self.height
    BoxLayout:
        orientation: 'horizontal'
        id: content

        canvas.before:
            Color:
                rgb: darkgreen_hax
            Rectangle:
                pos: self.x, self.y
                size: self.width, self.height
        RoomList:
            id: roomlist
            filter_panel: filter_panel
            orientation: 'vertical'
